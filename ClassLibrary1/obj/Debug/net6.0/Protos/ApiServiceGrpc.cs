// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/ApiService.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981
#region Designer generated code

using grpc = global::Grpc.Core;

namespace ApiService {
  public static partial class SheduleService
  {
    static readonly string __ServiceName = "ProtoApi.SheduleService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ApiService.Wrap> __Marshaller_ProtoApi_Wrap = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ApiService.Wrap.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ApiService.SubjectsFromDb> __Marshaller_ProtoApi_SubjectsFromDb = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ApiService.SubjectsFromDb.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ApiService.TutorsFromDb> __Marshaller_ProtoApi_TutorsFromDb = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ApiService.TutorsFromDb.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ApiService.AuditoriumsFromDb> __Marshaller_ProtoApi_AuditoriumsFromDb = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ApiService.AuditoriumsFromDb.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ApiService.TypesFromDb> __Marshaller_ProtoApi_TypesFromDb = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ApiService.TypesFromDb.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ApiService.GroupsFromDb> __Marshaller_ProtoApi_GroupsFromDb = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ApiService.GroupsFromDb.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ApiService.Filter> __Marshaller_ProtoApi_Filter = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ApiService.Filter.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ApiService.SheduleArrayByWeek> __Marshaller_ProtoApi_SheduleArrayByWeek = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ApiService.SheduleArrayByWeek.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ApiService.AllSheduleArray> __Marshaller_ProtoApi_AllSheduleArray = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ApiService.AllSheduleArray.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ApiService.AuthorizationContext> __Marshaller_ProtoApi_AuthorizationContext = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ApiService.AuthorizationContext.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ApiService.AuthorizationResult> __Marshaller_ProtoApi_AuthorizationResult = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ApiService.AuthorizationResult.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ApiService.Wrap, global::ApiService.SubjectsFromDb> __Method_GetSubjectFromDbRPC = new grpc::Method<global::ApiService.Wrap, global::ApiService.SubjectsFromDb>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSubjectFromDbRPC",
        __Marshaller_ProtoApi_Wrap,
        __Marshaller_ProtoApi_SubjectsFromDb);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ApiService.Wrap, global::ApiService.TutorsFromDb> __Method_GetTutorsFromDbRPC = new grpc::Method<global::ApiService.Wrap, global::ApiService.TutorsFromDb>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTutorsFromDbRPC",
        __Marshaller_ProtoApi_Wrap,
        __Marshaller_ProtoApi_TutorsFromDb);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ApiService.Wrap, global::ApiService.AuditoriumsFromDb> __Method_GetAuditoriumFromDbRPC = new grpc::Method<global::ApiService.Wrap, global::ApiService.AuditoriumsFromDb>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAuditoriumFromDbRPC",
        __Marshaller_ProtoApi_Wrap,
        __Marshaller_ProtoApi_AuditoriumsFromDb);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ApiService.Wrap, global::ApiService.TypesFromDb> __Method_GetTypeFromDbRPC = new grpc::Method<global::ApiService.Wrap, global::ApiService.TypesFromDb>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTypeFromDbRPC",
        __Marshaller_ProtoApi_Wrap,
        __Marshaller_ProtoApi_TypesFromDb);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ApiService.Wrap, global::ApiService.GroupsFromDb> __Method_GetGroupFromDbRPC = new grpc::Method<global::ApiService.Wrap, global::ApiService.GroupsFromDb>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetGroupFromDbRPC",
        __Marshaller_ProtoApi_Wrap,
        __Marshaller_ProtoApi_GroupsFromDb);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ApiService.Filter, global::ApiService.SheduleArrayByWeek> __Method_GetSheduleFromDb = new grpc::Method<global::ApiService.Filter, global::ApiService.SheduleArrayByWeek>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSheduleFromDb",
        __Marshaller_ProtoApi_Filter,
        __Marshaller_ProtoApi_SheduleArrayByWeek);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ApiService.AllSheduleArray, global::ApiService.Wrap> __Method_AddShedule = new grpc::Method<global::ApiService.AllSheduleArray, global::ApiService.Wrap>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddShedule",
        __Marshaller_ProtoApi_AllSheduleArray,
        __Marshaller_ProtoApi_Wrap);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ApiService.AuthorizationContext, global::ApiService.AuthorizationResult> __Method_CheckAuth = new grpc::Method<global::ApiService.AuthorizationContext, global::ApiService.AuthorizationResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckAuth",
        __Marshaller_ProtoApi_AuthorizationContext,
        __Marshaller_ProtoApi_AuthorizationResult);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ApiService.Filter, global::ApiService.SheduleArrayByWeek> __Method_GetSheduleFromDbForTutor = new grpc::Method<global::ApiService.Filter, global::ApiService.SheduleArrayByWeek>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSheduleFromDbForTutor",
        __Marshaller_ProtoApi_Filter,
        __Marshaller_ProtoApi_SheduleArrayByWeek);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::ApiService.ApiServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for SheduleService</summary>
    public partial class SheduleServiceClient : grpc::ClientBase<SheduleServiceClient>
    {
      /// <summary>Creates a new client for SheduleService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SheduleServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for SheduleService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SheduleServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SheduleServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SheduleServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ApiService.SubjectsFromDb GetSubjectFromDbRPC(global::ApiService.Wrap request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSubjectFromDbRPC(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ApiService.SubjectsFromDb GetSubjectFromDbRPC(global::ApiService.Wrap request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSubjectFromDbRPC, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ApiService.SubjectsFromDb> GetSubjectFromDbRPCAsync(global::ApiService.Wrap request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSubjectFromDbRPCAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ApiService.SubjectsFromDb> GetSubjectFromDbRPCAsync(global::ApiService.Wrap request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSubjectFromDbRPC, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ApiService.TutorsFromDb GetTutorsFromDbRPC(global::ApiService.Wrap request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTutorsFromDbRPC(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ApiService.TutorsFromDb GetTutorsFromDbRPC(global::ApiService.Wrap request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTutorsFromDbRPC, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ApiService.TutorsFromDb> GetTutorsFromDbRPCAsync(global::ApiService.Wrap request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTutorsFromDbRPCAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ApiService.TutorsFromDb> GetTutorsFromDbRPCAsync(global::ApiService.Wrap request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTutorsFromDbRPC, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ApiService.AuditoriumsFromDb GetAuditoriumFromDbRPC(global::ApiService.Wrap request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAuditoriumFromDbRPC(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ApiService.AuditoriumsFromDb GetAuditoriumFromDbRPC(global::ApiService.Wrap request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAuditoriumFromDbRPC, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ApiService.AuditoriumsFromDb> GetAuditoriumFromDbRPCAsync(global::ApiService.Wrap request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAuditoriumFromDbRPCAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ApiService.AuditoriumsFromDb> GetAuditoriumFromDbRPCAsync(global::ApiService.Wrap request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAuditoriumFromDbRPC, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ApiService.TypesFromDb GetTypeFromDbRPC(global::ApiService.Wrap request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTypeFromDbRPC(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ApiService.TypesFromDb GetTypeFromDbRPC(global::ApiService.Wrap request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTypeFromDbRPC, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ApiService.TypesFromDb> GetTypeFromDbRPCAsync(global::ApiService.Wrap request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTypeFromDbRPCAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ApiService.TypesFromDb> GetTypeFromDbRPCAsync(global::ApiService.Wrap request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTypeFromDbRPC, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ApiService.GroupsFromDb GetGroupFromDbRPC(global::ApiService.Wrap request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGroupFromDbRPC(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ApiService.GroupsFromDb GetGroupFromDbRPC(global::ApiService.Wrap request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetGroupFromDbRPC, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ApiService.GroupsFromDb> GetGroupFromDbRPCAsync(global::ApiService.Wrap request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGroupFromDbRPCAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ApiService.GroupsFromDb> GetGroupFromDbRPCAsync(global::ApiService.Wrap request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetGroupFromDbRPC, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ApiService.SheduleArrayByWeek GetSheduleFromDb(global::ApiService.Filter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSheduleFromDb(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ApiService.SheduleArrayByWeek GetSheduleFromDb(global::ApiService.Filter request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSheduleFromDb, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ApiService.SheduleArrayByWeek> GetSheduleFromDbAsync(global::ApiService.Filter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSheduleFromDbAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ApiService.SheduleArrayByWeek> GetSheduleFromDbAsync(global::ApiService.Filter request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSheduleFromDb, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ApiService.Wrap AddShedule(global::ApiService.AllSheduleArray request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddShedule(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ApiService.Wrap AddShedule(global::ApiService.AllSheduleArray request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddShedule, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ApiService.Wrap> AddSheduleAsync(global::ApiService.AllSheduleArray request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddSheduleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ApiService.Wrap> AddSheduleAsync(global::ApiService.AllSheduleArray request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddShedule, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ApiService.AuthorizationResult CheckAuth(global::ApiService.AuthorizationContext request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckAuth(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ApiService.AuthorizationResult CheckAuth(global::ApiService.AuthorizationContext request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CheckAuth, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ApiService.AuthorizationResult> CheckAuthAsync(global::ApiService.AuthorizationContext request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckAuthAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ApiService.AuthorizationResult> CheckAuthAsync(global::ApiService.AuthorizationContext request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CheckAuth, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ApiService.SheduleArrayByWeek GetSheduleFromDbForTutor(global::ApiService.Filter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSheduleFromDbForTutor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ApiService.SheduleArrayByWeek GetSheduleFromDbForTutor(global::ApiService.Filter request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSheduleFromDbForTutor, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ApiService.SheduleArrayByWeek> GetSheduleFromDbForTutorAsync(global::ApiService.Filter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSheduleFromDbForTutorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ApiService.SheduleArrayByWeek> GetSheduleFromDbForTutorAsync(global::ApiService.Filter request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSheduleFromDbForTutor, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override SheduleServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SheduleServiceClient(configuration);
      }
    }

  }
}
#endregion
